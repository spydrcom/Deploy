<JXR>


	<!-- get access to master object for vector functions -->
	<class called='VectorLib' package='Algorithms' name='VectorPrimitives' />
	<void> <new saveAs='algorithms' class='VectorLib' using='environment' /> </void>
 

	<!-- create Function object for each symbol of that type -->
	<void><new saveAs='vector' package='CalctoolsLibs' name='ClMath' /></void>
	<call object='vector' method='setName'> <string>vector</string> </call>


	<populate class='Operator' using='vector' saveListAs='opsList'
			toBeCalled='Dot DP CP Index Range'
	 />

	<bean references='Dot'> <text Description='Dot product of two arrays; lengths of arrays must match' Reference='Dot' Symbol='.' /> <text RenderAs='&#183;' />  <set Precedence='10' /> </bean>
	<bean references='DP'> <text Description='Dot product of two arrays; lengths of arrays must match' Reference='Dot' Symbol='.' /> <text RenderAs='*@*' />  <set Precedence='10' /> </bean>
	<bean references='CP'> <text Description='Cross product of two arrays; lengths of arrays must match' Reference='Dot' Symbol='.' /> <text RenderAs='*%*' />  <set Precedence='10' /> </bean>
	<bean references='Index'> <text Description='Array indexing operation implemented as a binary operator' Reference='Indexing' Symbol='#' />  <set Precedence='12' /> </bean>
	<bean references='Range'> <text Description='Array range operation implemented as a binary operator' Reference='Range' Symbol='..' />  <set Precedence='12' /> </bean>

	<!-- invoke macro to generate operator function and add to table -->
	<expand indirectUsing='symbolBean' path='cfg/OperatorSymbol.xml' 
		using='algorithms symbolTable' inclusionList='opsList'
	 />


	<populate class='Function' using='vector' saveListAs='funcList'
			toBeCalled='Array Pi Sigma Summation Integral Max Min Len Append Concat Stack Interval DotP Dyadic'
	 />

	<bean references='Array'> <text Description='Collect values into array' Reference='Array' Symbol='ARRAY' /> </bean>
	<bean references='DotP'> <text Description='Dot product of two arrays; lengths of arrays must match' Reference='Dot' Symbol='DOT' /> </bean>
	<bean references='Sigma'> <text Description='Sum of items of an array; traditional capital SIGMA notation' Reference='Summation' Symbol='SIGMA' /> <text RenderAs='&#x2211;' /> </bean>
	<bean references='Integral'> <text Description='Sum of items of an array constructed based on delta terms; using traditional integral notation' Reference='Integral' Symbol='INTEGRAL' /> <text RenderAs='&#x222B;' /> </bean>
	<bean references='Summation'> <text Description='Sum of items of an array; summation functionality using SIGMA notation' Reference='Summation' Symbol='SUMMATION' /> <text RenderAs='&#x2211;' /> </bean>
	<bean references='Pi'> <text Description='Product of items of an array; traditional capital PI notation' Reference='Pi' Symbol='PI' /> <text RenderAs='&#x03A0;' /> </bean>
	<bean references='Interval'> <text Description='Select sub-list of elements for interval lo-hi' Reference='Interval' Symbol='INTERVAL' /> </bean>
	<bean references='Len'> <text Description='Length of an array treated as a unary function' Reference='Length' Symbol='LENGTH' /> </bean>
	<bean references='Append'> <text Description='Append a series of arrays into one long array' Reference='Append' Symbol='APPEND' /> </bean>
	<bean references='Concat'> <text Description='Append a series of arrays into one long array' Reference='Concat' Symbol='CONCAT' /> </bean>
	<bean references='Stack'> <text Description='Append a series of arrays as rows into a matrix' Reference='Stack' Symbol='STACK' /> </bean>
	<bean references='Max'> <text Description='Maximum value found in array' Reference='Max' Symbol='MAX' /> </bean>
	<bean references='Min'> <text Description='Minimum value found in array' Reference='Min' Symbol='MIN' /> </bean>
	<bean references='Dyadic'> <text Description='Compute dyadic product of 2 arrays' Reference='Dyadic' Symbol='DYADIC' /> </bean>

	<!-- invoke macro to generate operator function and add to table -->
	<expand indirectUsing='symbolBean' path='cfg/FunctionSymbol.xml' 
		using='algorithms symbolTable' inclusionList='funcList'
	 />


	<populate class='Function' using='vector' saveListAs='funcList'
			toBeCalled='Pearson Fitline Fitexp Fitpoly Fitharmonic Lagrange Chebyshev'
	 />

	<bean references='Pearson'> <text Description='Compute Pearson regression coefficient for X/Y data set pair' Reference='Pearson' Symbol='PEARSON' /> </bean>
	<bean references='Fitline'> <text Description='Apply least squares regression to find line of best fit' Reference='Fitline' Symbol='FITLINE' /> </bean>
	<bean references='Fitexp'> <text Description='Apply non-linear (logarithmic) regression to find curve of best fit' Reference='Fitexp' Symbol='FITEXP' /> </bean>
	<bean references='Fitpoly'> <text Description='Apply Vandermonde matrix to solve for polynomial coefficients to find curve of best fit' Reference='Fitpoly' Symbol='FITPOLY' /> </bean>
	<bean references='Fitharmonic'> <text Description='Apply harmonic series regression to find curve of best fit' Reference='Fitharmonic' Symbol='FITHARMONIC' /> </bean>
	<bean references='Lagrange'> <text Description='Apply Lagrange series to derive interpolation polynomial as curve of best fit' Reference='Lagrange' Symbol='LAGRANGE' /> </bean>
	<bean references='Chebyshev'> <text Description='Apply Vandermonde matrix to solve for Chebyshev interpolation polynomial as curve of best fit' Reference='Chebyshev' Symbol='CHEBYSHEV' /> </bean>

	<!-- invoke macro to generate operator function and add to table -->
	<expand indirectUsing='symbolBean' path='cfg/FunctionSymbol.xml' 
		using='algorithms symbolTable' inclusionList='funcList'
	 />

	<Export using='vector' />


</JXR>