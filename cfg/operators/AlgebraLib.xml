<JXR>


	<!-- get access to master object for algebraic operators -->
	<void><new saveAs='algebraic' package='CalctoolsLibs' name='Algebra' /></void>
	<call object='algebraic' method='setName'> <string>algebraic</string> </call>


	<SaveAs toBeCalled='algorithms'>
		<!-- get access to object holding operator algorithms -->
		<evaluate object='algebraic' method='getAlgorithms'> <referto objectCalled='environment' /> </evaluate>
	</SaveAs>


	<!-- create value objects  -->
	<populate class='Value' using='algebraic' toBeCalled='e Pi' saveListAs='valuesList' />

	<!-- create value object for the description of e -->
	<bean references='e'> <text Description='Symbol for the irrational value of e; Epsilon base of natural log' Reference='E' Symbol='e' /> </bean>

	<!-- create value object for the description of pi -->
	<bean references='Pi'> <text Description='Symbol for the irrational value of pi; Trigonometric ratio of circle diameter to perimeter' Reference='Pi' Symbol='pi' /> </bean>

	<expand indirectUsing='symbolBean' path='cfg/ValueSymbol.xml' using='algorithms symbolTable' inclusionList='valuesList' />


	<SaveAs toBeCalled='Vinf'> <string>10000</string> </SaveAs>
	<SaveAs toBeCalled='Ve'> <string>2.718281828459</string> </SaveAs>
	<SaveAs toBeCalled='Vpi'> <string>3.141592653589793</string> </SaveAs>
	<SaveAs toBeCalled='e'> <new class='Constant' using='algebraic'/> </SaveAs>
	<SaveAs toBeCalled='pi'> <new class='Constant' using='algebraic'/> </SaveAs>
	<SaveAs toBeCalled='inf'> <new class='Constant' using='algebraic'/> </SaveAs>
	<bean references='e'> <text Description='Epsilon base of natural log' Reference='e' Symbol='e' /> <set SpecifiedValue='Ve' /> </bean>
	<bean references='pi'> <text Description='Symbol for the irrational value of pi' Reference='pi' Symbol='pi' /> <set SpecifiedValue='Vpi' /> </bean>
	<bean references='inf'> <text Description='Approximation to use for infinity' Reference='INF' Symbol='INFINITY' /> <set SpecifiedValue='Vinf' /> </bean>

	<call object='symbolTable' method='add'>
		<evaluate object='e' method='getCompiledValue' using='environment'/>
		<evaluate object='e' method='getDescription'/>
	</call>

	<call object='symbolTable' method='add'>
		<evaluate object='pi' method='getCompiledValue' using='environment'/>
		<evaluate object='pi' method='getDescription'/>
	</call>

	<call object='symbolTable' method='add'>
		<evaluate object='inf' method='getCompiledValue' using='environment'/>
		<evaluate object='inf' method='getDescription'/>
	</call>


	<!-- create operator object for each operation symbol -->
	<populate class='Operator' using='algebraic' toBeCalled='PlusOrMinus MinusOrPlus Sgn Abs Ceil Floor FloorDiv' saveListAs='opsList' />
	
	<bean references='PlusOrMinus'> <text Description='Plus or Minus operator' Reference='PlusMinus' Symbol='+|-' /> <set Precedence='7' /> </bean>
	<bean references='MinusOrPlus'> <text Description='Minus or Plus operator' Reference='MinusPlus' Symbol='-|+' /> <set Precedence='7' /> </bean>
	<bean references='Sgn'> <text Description='Sign SGN function value of parameter' Reference='Sgn' Symbol='sgn' /> <set Precedence='7' /> </bean>
	<bean references='Abs'> <text Description='ABS function value of parameter' Reference='Abs' Symbol='abs' /> <set Precedence='11' /> </bean>
	<bean references='FloorDiv'> <text Description='Floor function for quotient' Reference='FloorDiv' Symbol='floordiv' /> <set Precedence='11' /> </bean>
	<bean references='Floor'> <text Description='Floor function' Reference='Floor' Symbol='floor' /> <text RenderAs='&#x230A;' /> <set Precedence='11' /> </bean>
	<bean references='Ceil'> <text Description='Ceiling function' Reference='Ceil' Symbol='ceil' /> <text RenderAs='&#x2308;' /> <set Precedence='11' /> </bean>

	<expand indirectUsing='symbolBean' path='cfg/OperatorSymbol.xml' using='algorithms symbolTable' inclusionList='opsList' />


	<Export using='algebraic' />		<!-- export library object -->


</JXR>