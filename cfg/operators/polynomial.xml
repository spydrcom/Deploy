<JXR>


	<!-- get access to master object for polynomial operations -->
	<void><new saveAs='polynomial_evaluation' package='CalctoolsLibs' name='Algebra' /></void>
	<void><new saveAs='polynomial_computation' package='CalctoolsLibs' name='Algebra' /></void>
	<call object='polynomial_computation' method='setName'> <string>polynomial-computation</string> </call>
	<call object='polynomial_evaluation' method='setName'> <string>polynomial-evaluation</string> </call>


	<!-- get access to implementation objects for operators/functions -->
	<SaveAs toBeCalled='algorithms'> <new package='Algorithms' name='PolynomialPrimitives' using='environment' /> </SaveAs>


	<!-- create operator object for each symbol -->
	<populate class='Operator' using='polynomial_evaluation' saveListAs='opsList'
		toBeCalled='ArrayEval ExpEval PolyEval PolyPrime PolyDprime ClenshawPrime ClenshawDprime ClenshawEval EulerEval HarEval'
	 />

	<bean references='ArrayEval'> <text Description='Evaluate function defined by array at X' Reference='ArrayEval' Symbol='@#' /> <set Precedence='10' /> </bean>
	<bean references='ExpEval'> <text Description='Evaluate an exponential ( a * exp (b * x) ) defined by an array containing (a : b)' Reference='ExpEval' Symbol='*^#' /> <set Precedence='10' /> </bean>
	<bean references='PolyEval'> <text Description='Evaluate a polynomial defined by an array of coefficients ( c0 + c1*x + c2*x^2 + ... )' Reference='PolyEval' Symbol='+*^' /> <set Precedence='10' /> </bean>
	<bean references='PolyPrime'> <text Description='Evaluate a polynomial derivative defined by an array of coefficients ( c0 + c1*x + c2*x^2 + ... )' Reference='PolyPrime' Symbol='+*^&apos;' /> <set Precedence='10' /> </bean>
	<bean references='PolyDprime'> <text Description='Evaluate a polynomial second derivative defined by an array of coefficients ( c0 + c1*x + c2*x^2 + ... )' Reference='PolyDprime' Symbol='+*^&apos;&apos;' /> <set Precedence='10' /> </bean>
	<bean references='ClenshawPrime'> <text Description='Evaluate a Chebyshev polynomial derivative using Clenshaw&apos;s special case defined by an array of coefficients,ClenshawPrime' Reference='ClenshawPrime' Symbol='@*^&apos;' /> <set Precedence='10' /> </bean>
	<bean references='ClenshawDprime'> <text Description='Evaluate a Chebyshev polynomial second derivative using Clenshaw&apos;s special case defined by an array of coefficients' Reference='ClenshawDprime' Symbol='@*^&apos;&apos;' /> <set Precedence='10' /> </bean>
	<bean references='ClenshawEval'> <text Description='Evaluate a Chebyshev polynomial using Clenshaw&apos;s special case defined by an array of coefficients ( c0 + c1*T[1](x) + c2*T[2](x) + ... )' Reference='ClenshawEval' Symbol='@*^' /> <set Precedence='10' /> </bean>
	<bean references='HarEval'> <text Description='Evaluate a harmonic series defined by an array of coefficients ( c0 + c1*cos(x) + c2*cos(2x) + ... )' Reference='HarEval' Symbol='+#*' /> <set Precedence='10' /> </bean>
	<bean references='EulerEval'> <text Description='Evaluate an Euler polynomial defined by a specified order' Reference='EulerEval' Symbol='#*^' /> <set Precedence='10' /> </bean>

	<!-- invoke macro to generate operator and add to table -->
	<expand indirectUsing='symbolBean' path='cfg/OperatorSymbol.xml' 
		using='algorithms symbolTable' inclusionList='opsList'
	 />


	<!-- create function object for each symbol -->
	<populate class='Function' using='polynomial_computation' saveListAs='funcList'
		toBeCalled='Interpolate ChebPts ChebDom ChebInterp GaussQuad ClenQuad ArrayDer ArrayInt PolyHg ChebDer PolyDer PolyInt Deconv Conv Roots'
	 />

	<bean references='GaussQuad'> 
		<text Description='Apply Gauss Quadrature to build an integral of an interpolated Lagrange polynomial' 
		Reference='GaussQuad' Symbol='GAUSSQUAD' /> 
	</bean>

	<bean references='Interpolate'> <text Description='Generate Lagrange interpolation polynomial for function described by array' Reference='Interpolate' Symbol='INTERPOLATE' /> </bean>
	<bean references='ChebInterp'> <text Description='Generate Chebyshev interpolation polynomial for function described by array' Reference='ChebInterp' Symbol='CHEBINTERP' /> </bean>
	<bean references='ClenQuad'> <text Description='Compute integral of function described by Chebyshev polynomial' Reference='ClenQuad' Symbol='CLENQUAD' /> </bean>
	<bean references='ArrayDer'> <text Description='Compute derivative of function described by array' Reference='ArrayDer' Symbol='ARRAYDER' /> </bean>
	<bean references='ArrayInt'> <text Description='Compute integral of function described by array' Reference='ArrayInt' Symbol='ARRAYINT' /> </bean>
	<bean references='PolyHg'> <text Description='Compute coefficients of hyper geometric polynomial' Reference='PolyHg' Symbol='POLYHG' /> </bean>
	<bean references='ChebPts'> <text Description='Compute given number of Chebyshev points' Reference='ChebPoints' Symbol='CHEBPTS' /> </bean>
	<bean references='ChebDom'> <text Description='Compute domain across given number of Chebyshev points' Reference='ChebDomain' Symbol='CHEBDOM' /> </bean>
	<bean references='ChebDer'> <text Description='Compute derivative of Chebyshev T polynomial' Reference='ChebDer' Symbol='CHEBDER' /> </bean>
	<bean references='PolyDer'> <text Description='Compute derivative of polynomial' Reference='PolyDer' Symbol='POLYDER' /> </bean>
	<bean references='PolyInt'> <text Description='Compute integral of polynomial' Reference='PolyInt' Symbol='POLYINT' /> </bean>
	<bean references='Deconv'> <text Description='Compute quotient of polynomials' Reference='Deconv' Symbol='DECONV' /> </bean>
	<bean references='Conv'> <text Description='Compute product of polynomials' Reference='Conv' Symbol='CONV' /> </bean>
	<bean references='Roots'> <text Description='Compute roots of polynomial' Reference='Roots' Symbol='ROOTS' /> </bean>

	<!-- invoke macro to generate operator function and add to table -->
	<expand indirectUsing='symbolBean' path='cfg/FunctionSymbol.xml' 
		using='algorithms symbolTable' inclusionList='funcList'
	 />


	<Export using='polynomial_evaluation' />			<!-- export library objects -->
	<Export using='polynomial_computation' />


</JXR>