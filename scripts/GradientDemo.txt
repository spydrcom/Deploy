

//*  Gradient test function


// 2 parameters returning scalar
!! f ( x, y ) = - ( cos(x)^2 + cos(y)^2 )^2
// PLOT3D f (-2, -2)  4 4

// samples from gradient
!! FM ( x, y ) = grad f ( x, y )  

// scalar result so  gradient is vector
FGV = FM ( 1, 1 )  ;  PRETTYPRINT FGV

// divergence plot
!! FD ( x, y ) = div f ( x, y )  
// PLOTC FD ( 0, 0 ) 4 100



// 2 parameters returning scalar
!! Q ( x, y ) = x * exp ( - (x^2 + y^2) ) 
// PLOT3D Q (-2, -2)  4 4

// samples from gradient
!! QM ( x, y ) = grad Q ( x, y ) 

// scalar result so  gradient is vector
QGV = QM ( 1, 1 )  ;  PRETTYPRINT QGV

!! QD ( x, y ) = div Q ( x, y )  
// PLOTC QD ( -2, -2 ) 4 100


// 3 parameters returning vector
!! T ( x, y, z ) = ( y, -x, 0 )
// PLOT3D T (-4, -4)  8 8

// samples from gradient
!! TM ( x, y, z ) = grad T ( x, y, z )  

// vector result so  gradient is matrix
TGV = TM ( 1, 1, 1 )  ;  PRETTYPRINT TGV

// gradient is constant everywhere so curl is constant vector
C = curl T  ( 3, 3, 3 )  
PRETTYPRINT C


requires complex

// complex funcion test (using Airy Ai)

READ AiryBesselIdentities.txt

// verify Ai function available
CALC Ai (-2)

// simple gradient test
M = grad Ai (-2)
PRETTYPRINT  M

// simple curl test
C = curl Ai (-2)
PRETTYPRINT  C

// simple divergence test
D = div Ai (-2)
CALC  D

// divergence of complex plane segment
!! AiD ( x, y ) = div Ai ( x +!* y )  
calc AiD ( -3, -1 )

// plot divergence over plane segment
// PLOT3D AiD ( -4, -4 )  8  3
// PLOT3D AiD (  0, -4 ) 2.5 3

// very time expensive contour plot
// PLOTC AiD (  0, -4 ) 3 100

