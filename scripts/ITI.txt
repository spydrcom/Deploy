

//* Inverse Tangent Integrals


// Catalan's constant
A006752 = 0.9159655941772190150546

// computed using getTi2DerivativeComputer ()
C = ( 0, 1, 0, -0.1111111111111111111111112, 0, 0.0400000000000000000000000, 0, -0.0204081632653061224489796, 0, 0.0123456790123456790123457, 0, -0.0082644628099173553719009, 0, 0.0059171597633136094674557, 0, -0.0044444444444444444444445, 0, 0.0034602076124567474048443, 0, -0.0027700831024930747922438, 0, 0.0022675736961451247165533, 0, -0.0018903591682419659735350, 0, 0.0016000000000000000000000, 0, -0.0013717421124828532235940, 0, 0.0011890606420927467300833, 0, -0.0010405827263267429760666, 0, 0.0009182736455463728191001, 0, -0.0008163265306122448979592, 0, 0.0007304601899196493791089, 0, -0.0006574621959237343852729 )
CALC C

// use in polynomial expansion 
!! Ti2 (x) = C +*^ x

// test polynomial with imported coefficients (40 terms)
A006752_Error = A006752 - Ti2 1
PRETTYPRINT A006752_Error

// compute known value against 40 term imported polynomial
knownResult = 0.2658649582793069826918750863971206876427
twoMsqrt3 = 2 - sqrt 3  ;  approx = Ti2 twoMsqrt3

// test known value Ti2(2 - sqrt 3)
ti2Err = approx - knownResult
PRETTYPRINT ti2Err

// plot of -1..1 domain
graph [ -1 <= x <= 1 <> 0.01 ] ( Ti2 x )

// general form of function
!! Ti2 (x) = SIGMA [ 1 <= k <= 1000 ] ( (-1)^(k-1) * x^(2*k-1) / (2*k-1)^2 )

// test 1000 terms of in-line SIGMA calculation (should improve on first test)
A006752_Error = A006752 - Ti2 1
PRETTYPRINT A006752_Error



// quadrature version
!! atanc (x) = atan x / x
graph [ -1 <= x <= 1 <> 0.01 ] ( atanc x )

// compute A006752 with TSQ
configure QUAD method "TSQ" description "custom quadrature using TANH-SINH"
instance TSQuad QUAD

dt = 1
// test using TSQ, incredible amount of precision for quadrature
!! Ti(x) = TSQuad [0 <= t <= x <> dt] ( atanc ( t ) * <*> t ) ; express Ti

// plot of 0..10
graph [ 0.1 <= x <= 10 <> 0.05 ] ( Ti x )

// compute precision (of quadrature solution) as error
A006752_Error = A006752 - Ti 1
PRETTYPRINT A006752_Error

SplineC = (0.6803345913504691, -0.22825222210192087, 0.0233628700430849, 0.0020801653131297293, -0.0018880493896302707, 5.778284770046722E-4, -1.0854966382974623E-4, 6.79818884701481E-6, 4.166628366400094E-6, -2.104175148349748E-6, 5.741115172268491E-7, -9.233802910763344E-8, -1.2874467151519397E-9, 6.9142333102498024E-9, -2.782608463126653E-9, 6.741215303874565E-10, -8.482130247566845E-11, -1.2566148384146342E-11, 1.1414994002140577E-11, -3.923447178511818E-12, 8.341628606981914E-13, -6.827415647701071E-14, -3.23162304720991E-14, 1.9094658328041845E-14, -5.7816541973973345E-15, 1.1538289521803759E-15, -1.6403325220833806E-17, -1.4061327310915364E-16, 4.3812534442251394E-17, 1.956258778266438E-18, -1.6366647184307384E-18)

