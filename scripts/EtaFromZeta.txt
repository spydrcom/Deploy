

//* compare computed eta against Anaconda zeta standard


!! mu(z) = 2^(1-z)
!! G(z) = Gamma (z+1)
!! mugsi(z) = mu(z) * (1-mu(z)) * G(z)
!! E(z) =  zeta(z)  * mugsi(z)
calc E ( 0.5 + i  )


init "net.myorb.math.specialfunctions.polylog.Eta" named "SFeta" 
!! etaCrit (x) = SFeta ( 0.5 + x*i )
plotri etaCrit [1 <= x <= 5 <> 0.2]


!! etaFromZeta(z) = zeta(z) * (1-mu(z))
!! ECrit (x) = etaFromZeta ( 0.5 + x*i )
plotri ECrit [1 <= x <= 5 <> 0.2]



// tried this - still showing problems


init "net.myorb.math.specialfunctions.polylog.Eta" named "SFeta" 
!! etaCrit (x) = SFeta ( 0.5 + x*i )
plotri etaCrit [1 <= x <= 5 <> 0.2]


!! etaFromZeta(z) = zeta(z) * (1-mu(z))
!! ECrit (x) = etaFromZeta ( 0.5 + x*i )
plotri ECrit [1 <= x <= 5 <> 0.05]



// WORKING VERSION - USING SPLINE INSTEAD OF TSH


init "net.myorb.math.specialfunctions.polylog.Amdeberhan" method "VCN" N "10"
!! amdCrit(x) = AMD  ( 0.5 + x*i )
plotri amdCrit [1 <= x <= 5 <> 0.05]

!! amdFromZeta(z) =  zeta(z)  * mugsi(z)
!! anaAmdCrit (x) = amdFromZeta ( 0.5 + x*i )
plotri anaAmdCrit [1 <= x <= 5 <> 0.05]

s = 1000000
!! d (x) = s* anaAmdCrit (x)  - s* amdCrit (x)
plotri d  [1 <= x <= 5 <> 0.05]


